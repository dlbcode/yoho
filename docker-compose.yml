version: '3'

services:
  web:
    image: nginx:latest
    container_name: yh-web
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - nginx_logs:/var/log/nginx/
      - ./www:/var/www/   
      - letsencrypt_certs:/etc/letsencrypt:ro
      - certbot_www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '256M'
        reservations:
          cpus: '0.5'
          memory: '128M'

  certbot:
    image: certbot/certbot
    profiles:
      - manual
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '128M'
        reservations:
          cpus: '0.125'
          memory: '64M'

  mongodb:
    image: mongo:6.0
    container_name: yh-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: rsroot
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_RSROOT_PASSWORD}
      MONGO_RSUSER_PASSWORD: ${MONGODB_RSUSER_PASSWORD}
      MONGO_INITDB_DATABASE: rsdb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_backup:/backup
      - ./services/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh # Keep this as a bind mount (for initialization)
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2G'
        reservations:
          cpus: '1'
          memory: '1G'

  nodejs:
    build:
      context: ./services/nodejs
      dockerfile: Dockerfile
    container_name: yh-nodejs
    environment:
      MONGO_RSUSER_PASSWORD: ${MONGODB_RSUSER_PASSWORD}
      TEQUILA_API_KEY: ${TEQUILA_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
    volumes:
      - node_modules:/app/node_modules
      - nodejs_app:/app
      - ./www:/usr/src/app/www
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1G'
        reservations:
          cpus: '1'
          memory: '512M'

  squid:
    image: ubuntu/squid:latest
    container_name: yh-squid
    ports:
      - "3128:3128"
    volumes:
      - ./services/squid/squid.conf:/etc/squid/squid.conf
      - squid_cache:/var/spool/squid
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '256M'
        reservations:
          cpus: '1'
          memory: '128M'

volumes:
  nginx_logs:
  certbot_www:
  letsencrypt_certs:
  mongodb_data:
  mongodb_backup:
  node_modules:
  nodejs_app:
  squid_cache: